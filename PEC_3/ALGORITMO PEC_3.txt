ALGORITHM PEC3

VAR
SIZE: INTEGER;
RESULTADO:INTEGER;
END VAR

WRITESTRING("INPUT\N");
WRITESTRING("SIZE (2-3)?\N");
SIZE:= READINTEGER();

IF SIZE == 2 THEN

   VAR
   MATRIZ: vector [SIZE][SIZE] of integer
   END VAR

   WRITESTRING("POSITION (1,1)?\N");
   MATRIZ[1][1]:= READINTEGER();

   WRITESTRING("POSITION (1,2)?\N");
   MATRIZ[1][2]:= READINTEGER();

   WRITESTRING("POSITION (2,1)?\N");
   MATRIZ[2][1]:= READINTEGER();

   WRITESTRING("POSITION (2,2)?\N");
   MATRIZ[2][2]:= READINTEGER();

   RESULTADO:= MATRIZ[1][1] * MATRIZ[2][2] - MATRIZ[1][2] * MATRIZ[2][1] 

   WRITESTRING("OUTPUT\N");
   WRITESTRING("RESULT: %I\N", RESULTADO);

ELSE
   IF SIZE == 3 THEN

      VAR
      MATRIZ: vector [SIZE][SIZE] of integer
      END VAR

      WRITESTRING("POSITION (1,1)?\N");
      MATRIZ[1][1]:= READINTEGER();

      WRITESTRING("POSITION (1,2)?\N");
      MATRIZ[1][2]:= READINTEGER();

      WRITESTRING("POSITION (1,3)?\N");
      MATRIZ[1][3]:= READINTEGER();

      WRITESTRING("POSITION (2,1)?\N");
      MATRIZ[2][1]:= READINTEGER();
      
      WRITESTRING("POSITION (2,2)?\N");
      MATRIZ[2][2]:= READINTEGER();

      WRITESTRING("POSITION (2,3)?\N");
      MATRIZ[2][3]:= READINTEGER();

      WRITESTRING("POSITION (3,1)?\N");
      MATRIZ[3][1]:= READINTEGER();
      
      WRITESTRING("POSITION (3,2)?\N");
      MATRIZ[3][2]:= READINTEGER();

      WRITESTRING("POSITION (3,3)?\N");
      MATRIZ[3][3]:= READINTEGER();

      RESULTADO:= MATRIZ[1][1] * MATRIZ[2][2] * MATRIZ[3][3] + MATRIZ[1][2] * MATRIZ[2][3] * MATRIZ[3][1] 
+ MATRIZ[1][3] * MATRIZ[2][1] * MATRIZ[3][2] +- MATRIZ[1][3] * MATRIZ[2][2] * MATRIZ[3][1]
-MATRIZ[1][1] * MATRIZ[2][3] * MATRIZ[3][2]-MATRIZ[1][2] * MATRIZ[2][1] * MATRIZ[3][3] 

      WRITESTRING("OUTPUT\N");
      WRITESTRING("RESULT: %I\N", RESULTADO);

   ELSE

       WRITESTRING("INVALID VALUE\N");

   END IF
END IF

END ALGORITHM PEC3